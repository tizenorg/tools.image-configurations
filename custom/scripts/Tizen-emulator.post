#make system directories.
mkdir -p sys/kernel/debug
mkdir -p mnt/csc
mkdir -p mnt/data
mkdir -p mnt/db

#define platform
echo -n 'i586-tizen-linux' > etc/rpm/platform

ssh-keygen -t rsa1 -f etc/ssh/ssh_host_key -N ""
ssh-keygen -t dsa -f etc/ssh/ssh_host_dsa_key -N ""
ssh-keygen -t rsa -f etc/ssh/ssh_host_rsa_key -N ""

chown 5000:5000 opt/home/app -R
chmod 755 opt/home/app -R
chown 5100:5100 opt/home/developer -R
chmod 755 opt/home/developer -R

chroot . pkg_initdb

#### set NoDisplay=true for desktop files : start
desktop_list=$(find /opt/share/applications -name '*.desktop')
desktop_list=$desktop_list' '$(find /usr/share/applications -name '*.desktop')

for desktop_file in $desktop_list; do                                                            
#    if [[ $desktop_file =~ .*org.tizen.setting.desktop.* ]];then                          
#        echo $desktop_file                                        
#        echo 'skip com.tizen.setting.desktop'
#        continue                                                  
#    fi                                                            
                                                                  
    if [[ $desktop_file =~ .*org.tizen.browser.desktop.* ]];then
        echo $desktop_file                                      
        echo 'skip org.tizen.browser.desktop'                   
        continue                                                
    fi                                                          

	if [[ ! -z `awk '/X-TIZEN-PackageType/ {print}' $desktop_file` ]];then
		if [[ -z `awk '/X-TIZEN-PackageType=rpm/ {print}' $desktop_file` ]];then
			echo 'skip' $desktop_file
			continue
		fi
	fi

	appid=$(echo $desktop_file | sed -n "s/.desktop.*//p" | sed -n "s/\/.*share.applications\///p")
    sqlite3 /opt/dbspace/.pkgmgr_parser.db "update package_app_info set app_nodisplay='true' where app_id='$appid'"
                                                                
	sed -i 's/NoDisplay=false/NoDisplay=true/g' $desktop_file
    echo $(basename $desktop_file)' modified '$(grep NoDisplay -rn $desktop_file)
done  
#### set NoDisplay=true for desktop files : end 

chroot . ail_initdb

cat > usr/bin/press << EOF
#!/bin/sh

JUNK="SLP"

[ "\$1" ] && TIMEOUT="\$1" || TIMEOUT="1"

echo "Press return key to stop scripts"
read -t \$TIMEOUT JUNK
exit \$?
EOF
chmod +x usr/bin/press

# [systemd] we need suid-root X for it to work from user-session
#           Xorg will move to system, so this is temporary
chmod 4755 /usr/bin/Xorg

ln -s /opt/etc/X11/xkb usr/share/X11
rm -f /etc/localtime
ln -s /opt/etc/localtime /etc/localtime
#rm -rf /usr/share/zoneinfo  
#ln -sf /opt/share/zoneinfo /usr/share/zoneinfo 

echo "UDEV_PERSISTENT_STORAGE=no" >> etc/sysconfig/udev

# for QA
mv /usr/include/python2.7/pyconfig.h /usr/pyconfig.h
rm -rf /usr/include/*
mkdir -p /usr/include/python2.7
mv /usr/pyconfig.h /usr/include/python2.7/pyconfig.h
#rm -rf /usr/include
rm -rf usr/share/man
rm -rf usr/share/doc


/etc/make_info_file.sh Emulator Tizen_EMULATOR_`date +%Y%m%d.%H%M`


ln -sf /etc/info.ini /opt/etc/info.ini
ln -sf /etc/info.ini /usr/etc/info.ini

# read-writeable /var will be bind-mounted to /opt/var leaving rootfs read-only
# below script more generic

rm -f /var/lib/rpm/__db*
rpm --rebuilddb
cp -a /var /opt/
rm -rf /var
mkdir /var

# [systemd] some firstboot script like kbd could be done to image-creatation stage
#           this patch is for it.
for i in /etc/preconf.d/*; do
    $i
done

